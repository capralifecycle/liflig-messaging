<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>no.liflig</groupId>
    <artifactId>kotlin-parent</artifactId>
    <version>3.20250228.043044</version>
  </parent>

  <!--suppress MavenRedundantGroupId -->
  <groupId>no.liflig</groupId>
  <artifactId>liflig-messaging</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>liflig-messaging</name>
  <description>
    Logging library for Kotlin JVM, that thinly wraps SLF4J and Logback to provide a more ergonomic API.
  </description>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://github.com/capralifecycle/liflig-messaging/blob/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <modules>
    <module>messaging-api</module>
    <module>messaging-awssdk</module>
    <module>messaging-sqs-lambda</module>
  </modules>

  <organization>
    <name>Liflig</name>
    <url>https://liflig.no/</url>
  </organization>

  <properties>
    <!-- To avoid deploying the parent. Must be overridden in submodules that should be deployed -->
    <maven.deploy.skip>true</maven.deploy.skip>

    <major-version>0</major-version>
    <revision>${major-version}.local-SNAPSHOT</revision>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Logging -->
    <slf4j.version>2.0.17</slf4j.version>
    <logback.version>1.5.17</logback.version>
    <logstash-logback-encoder.version>8.0</logstash-logback-encoder.version>
    <liflig-logging.version>2.20250304.043602</liflig-logging.version>

    <!-- Serialization -->
    <kotlinx-serialization.version>1.8.0</kotlinx-serialization.version>
    <jackson.version>2.18.3</jackson.version>

    <!-- Testing -->
    <junit.version>5.12.0</junit.version>
    <kotest.version>5.9.1</kotest.version>

    <!-- Maven plugins -->
    <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
    <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
    <flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>

    <!-- Transitive dependencies (must specify these for Maven Enforcer) -->
    <commons-codec.version>1.18.0</commons-codec.version>
    <httpcomponents.version>4.4.16</httpcomponents.version>
    <annotations.version>26.0.2</annotations.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!--
        We include all libraries here in dependencyManagement, so that consumers get the right versions of these when
        including this parent POM as a POM dependency (otherwise consumers may have to specify these themselves).
      -->

      <dependency>
        <groupId>no.liflig</groupId>
        <artifactId>messaging-api</artifactId>
        <version>${revision}</version>
      </dependency>

      <dependency>
        <groupId>no.liflig</groupId>
        <artifactId>messaging-awssdk</artifactId>
        <version>${revision}</version>
      </dependency>


      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>${slf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Transitive dependencies (must specify these for Maven Enforcer) -->
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${httpcomponents.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>


    <!-- Logging -->
    <dependency>
      <groupId>no.liflig</groupId>
      <artifactId>liflig-logging</artifactId>
      <version>${liflig-logging.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-assertions-core-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <scm>
    <developerConnection>scm:git:https://github.com/capralifecycle/liflig-messaging.git</developerConnection>
    <connection>scm:git:https://github.com/capralifecycle/liflig-messaging.git</connection>
    <url>https://github.com/capralifecycle/liflig-messaging</url>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/*</url>
    </repository>
  </repositories>

  <distributionManagement>
        <repository>
          <id>github</id>
          <url>https://maven.pkg.github.com/capralifecycle/liflig-messaging</url>
        </repository>
  </distributionManagement>

  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <args>
            <!-- Require explicit public modifiers, to avoid accidentally publishing internal APIs -->
            <arg>-Xexplicit-api=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Formatting with ktfmt -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <kotlin>
            <toggleOffOn/>
            <ktfmt>
              <version>${ktfmt.version}</version>
              <style>DEFAULT</style>
            </ktfmt>
          </kotlin>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>


      <!-- Plugin for enforcing proper dependency management -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
                <dependencyConvergence/>
                <requireUpperBoundDeps/>
                <banDynamicVersions>
                  <allowSnapshots>true</allowSnapshots>
                </banDynamicVersions>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
